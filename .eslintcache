[{"/Users/thitiwasnupan/workspaces/react-dkups-clone/src/index.tsx":"1","/Users/thitiwasnupan/workspaces/react-dkups-clone/src/reportWebVitals.ts":"2","/Users/thitiwasnupan/workspaces/react-dkups-clone/src/App.tsx":"3","/Users/thitiwasnupan/workspaces/react-dkups-clone/src/store/Store.tsx":"4","/Users/thitiwasnupan/workspaces/react-dkups-clone/src/reducers/Reducer.tsx":"5","/Users/thitiwasnupan/workspaces/react-dkups-clone/src/reducers/LoginReducer.tsx":"6","/Users/thitiwasnupan/workspaces/react-dkups-clone/src/constant/LoginConstant.tsx":"7","/Users/thitiwasnupan/workspaces/react-dkups-clone/src/utils/Utils.tsx":"8","/Users/thitiwasnupan/workspaces/react-dkups-clone/src/components/loginComponent/LoginComponent.tsx":"9","/Users/thitiwasnupan/workspaces/react-dkups-clone/src/components/footNav/FootNav.tsx":"10","/Users/thitiwasnupan/workspaces/react-dkups-clone/src/components/profileComponent/ProfileComponent.tsx":"11"},{"size":441,"mtime":1609609323632,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1609582842746,"results":"14","hashOfConfig":"13"},{"size":916,"mtime":1609601898878,"results":"15","hashOfConfig":"13"},{"size":219,"mtime":1609584529371,"results":"16","hashOfConfig":"13"},{"size":227,"mtime":1609584529361,"results":"17","hashOfConfig":"13"},{"size":933,"mtime":1609583743244,"results":"18","hashOfConfig":"13"},{"size":139,"mtime":1609583743252,"results":"19","hashOfConfig":"13"},{"size":1777,"mtime":1609609414299,"results":"20","hashOfConfig":"13"},{"size":2795,"mtime":1609609222833,"results":"21","hashOfConfig":"13"},{"size":1223,"mtime":1609602744625,"results":"22","hashOfConfig":"13"},{"size":748,"mtime":1609609323624,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qnlnfw",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"33"},"/Users/thitiwasnupan/workspaces/react-dkups-clone/src/index.tsx",[],"/Users/thitiwasnupan/workspaces/react-dkups-clone/src/reportWebVitals.ts",[],["50","51"],"/Users/thitiwasnupan/workspaces/react-dkups-clone/src/App.tsx",["52","53","54","55","56"],"/Users/thitiwasnupan/workspaces/react-dkups-clone/src/store/Store.tsx",[],["57","58"],"/Users/thitiwasnupan/workspaces/react-dkups-clone/src/reducers/Reducer.tsx",[],"/Users/thitiwasnupan/workspaces/react-dkups-clone/src/reducers/LoginReducer.tsx",[],"/Users/thitiwasnupan/workspaces/react-dkups-clone/src/constant/LoginConstant.tsx",[],"/Users/thitiwasnupan/workspaces/react-dkups-clone/src/utils/Utils.tsx",[],"/Users/thitiwasnupan/workspaces/react-dkups-clone/src/components/loginComponent/LoginComponent.tsx",["59","60"],"import React, {useState, useEffect} from \"react\";\nimport './LoginComponentCss.css'\nimport {setMemberTelNo, setMemberLoginKey, checkLogin , logger} from \"../../utils/Utils\";\nimport {Redirect} from \"react-router-dom\";\n\nconst LoginComponent: React.FC = () => {\n    let telNo: string = \"\";\n    let password: string = \"\";\n    const inputTelNo: string = \"input__telNo\"\n    const inputPassword: string = \"input__password\"\n    const [isLogin, setIsLogin] = useState<Boolean>();\n    let redir: string = \"/login\";\n    useEffect(() => {\n        logger('LoginComponent');\n        setIsLogin(checkLogin());\n    }, []);\n\n    const clearValueInput = () => {\n        $(`#${inputTelNo}`).val('');\n        $(`#${inputPassword}`).val('');\n    };\n\n\n    const login = () => {\n        logger(`telNo ${telNo}`)\n        logger(`password ${password}`)\n        setMemberTelNo(telNo);\n        setMemberLoginKey(password);\n        clearValueInput();\n        if (checkLogin()) {\n            setIsLogin(checkLogin());\n        }\n    };\n\n    return (\n        <div className={\"LoginComponent__\"}>\n            {(isLogin) ? <Redirect to=\"/profile\"/> : <div></div>}\n            <div className=\"LoginComponent__login__form\">\n                <div className=\"row\" style={{justifyContent: \"center\"}}>\n                    <div className=\"input-group input-group-sm col-10 LoginComponent__login__form__telno\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\" style={{width: \"100px\"}}>tel number</span>\n                        </div>\n                        <input type=\"tel\" className=\"form-control\" aria-label=\"Small\"\n                               aria-describedby=\"inputGroup-sizing-sm\" onChange={event => telNo = event.target.value}\n                               id={inputTelNo}\n                        />\n\n                    </div>\n                    <div className=\"input-group input-group-sm col-10 LoginComponent__login__form__password\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\" id=\"inputGroup-sizing-sm\"\n                                  style={{width: \"100px\"}}>password</span>\n                        </div>\n                        <input type=\"password\" className=\"form-control\" aria-label=\"Small\"\n                               aria-describedby=\"inputGroup-sizing-sm\"\n                               onChange={event => password = event.target.value}\n                               id={inputPassword}\n                        />\n                    </div>\n                </div>\n                <a className=\"btn btn-primary margin_top\" onClick={login}>login</a>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginComponent;","/Users/thitiwasnupan/workspaces/react-dkups-clone/src/components/footNav/FootNav.tsx",[],"/Users/thitiwasnupan/workspaces/react-dkups-clone/src/components/profileComponent/ProfileComponent.tsx",["61"],"import React, {useEffect, useState} from \"react\";\nimport {logOut, checkLogin, logger as log} from \"../../utils/Utils\";\nimport {Redirect} from \"react-router-dom\";\n\nconst ProfileComponent: React.FC = () => {\n    const [isLogin, setIsLogin] = useState<Boolean>(checkLogin());\n\n    useEffect(() => {\n        log('ProfileComponent');\n        setIsLogin(checkLogin());\n        log(`isLogin ${isLogin}`);\n    }, []);\n\n    checkLogin();\n    return (\n        <>\n            {(isLogin) ? <div></div> : <Redirect to=\"/login\"/>}\n            <button className=\"btn btn-danger\" onClick={() => {\n                logOut();\n                setIsLogin(checkLogin());\n            }}>log out\n            </button>\n        </>\n    );\n}\n\nexport default ProfileComponent;",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":12},{"ruleId":"66","severity":1,"message":"70","line":5,"column":9,"nodeType":"68","messageId":"69","endLine":5,"endColumn":23},{"ruleId":"66","severity":1,"message":"71","line":5,"column":25,"nodeType":"68","messageId":"69","endLine":5,"endColumn":42},{"ruleId":"66","severity":1,"message":"72","line":6,"column":34,"nodeType":"68","messageId":"69","endLine":6,"endColumn":40},{"ruleId":"66","severity":1,"message":"73","line":13,"column":9,"nodeType":"68","messageId":"69","endLine":13,"endColumn":26},{"ruleId":"62","replacedBy":"74"},{"ruleId":"64","replacedBy":"75"},{"ruleId":"66","severity":1,"message":"76","line":12,"column":9,"nodeType":"68","messageId":"69","endLine":12,"endColumn":22},{"ruleId":"77","severity":1,"message":"78","line":62,"column":17,"nodeType":"79","endLine":62,"endColumn":75},{"ruleId":"80","severity":1,"message":"81","line":12,"column":8,"nodeType":"82","endLine":12,"endColumn":10,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'getMemberTelNo' is defined but never used.","'getMemberLoginKey' is defined but never used.","'Switch' is defined but never used.","'chkLogin' is assigned a value but never used.",["84"],["85"],"'redir' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLogin'. Either include it or remove the dependency array.","ArrayExpression",["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [isLogin]",{"range":"89","text":"90"},[406,408],"[isLogin]"]